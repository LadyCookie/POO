package Interface;

import javax.swing.*;
import java.awt.*;

public class MessageForm {
    private JPanel messageFormPanel;
    private JTextArea messageTextArea;
    private JTextField timeStampTextField;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        messageFormPanel = new JPanel();
        messageFormPanel.setLayout(new GridBagLayout());
        messageFormPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-4512984)), null));
        messageTextArea = new JTextArea();
        messageTextArea.setLineWrap(true);
        messageTextArea.setWrapStyleWord(false);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        messageFormPanel.add(messageTextArea, gbc);
        timeStampTextField = new JTextField();
        timeStampTextField.setEditable(false);
        Font timeStampTextFieldFont = this.$$$getFont$$$(null, Font.ITALIC, -1, timeStampTextField.getFont());
        if (timeStampTextFieldFont != null) timeStampTextField.setFont(timeStampTextFieldFont);
        timeStampTextField.setHorizontalAlignment(4);
        timeStampTextField.setText("January 1,  18h50");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        messageFormPanel.add(timeStampTextField, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return messageFormPanel;
    }

}
